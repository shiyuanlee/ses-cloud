name: Deployment
on:
  push:
    branches:
      - main
jobs:
  terraform_init_plan_apply:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ap-southeast-1

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2
      with:
        terraform_wrapper: false

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Terraform Init
      run: terraform init
      working-directory: ./prod/ap-southeast-1/storage/s3
    
    - name: Terraform plan
      run: terraform plan
      working-directory: ./prod/ap-southeast-1/storage/s3
    
    - name: Terraform apply
      id: apply
      run: terraform apply -auto-approve
      working-directory: ./prod/ap-southeast-1/storage/s3
    
    - name: Output URL 
      run: |
        echo "s3_bucket_arn: ${{ steps.apply.outputs.s3_bucket_arn }}"
        
      

  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get code
  #       uses: actions/checkout@v3
  #     # - name: load and cache dependencies
  #     #   uses: ./.github/actions/cached-deps
  #     - name: Test code
  #       id: run-tests
  #       run: npm run test
  #     - name: Upload test report
  #       if: failure() && steps.run-tests.outcome == 'failure'
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: test-report
  #         path: test.json
  # build:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get code
  #       uses: actions/checkout@v3
  #     - name: load and cache dependencies
  #       uses: ./.github/actions/cached-deps
  #     - name: Build website
  #       run: npm run build
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: dist-files
  #         path: dist
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get code
  #       uses: actions/checkout@v3
  #     - name: Get build artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: dist-files
  #         path: ./dist
  #     - name: Output contents
  #       run: ls
  #     - name: Deploy site
  #       id: deploy
  #       uses: ./.github/actions/deploy-s3-docker
  #       env: 
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       with:
  #         bucket: 
  #         dist-folder:
  #         bucket-region: us-east-1
  #     - name: Output information
  #       run: |
  #         echo "Live URL: ${{ steps.deploy.outputs.website-url }}"
      

